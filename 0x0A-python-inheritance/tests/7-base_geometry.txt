
``BaseGeometry class``
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()

# Test with an integer greater than 0 (expected to pass without error)
    >>> bg.integer_validator("my_var", 3)

# Test with a negative integer (expected to raise ValueError)
    >>> bg.integer_validator("my_var", -5)
    Traceback (most recent call last):
        ...
    ValueError: my_var must be greater than 0

# Test with zero (expected to raise ValueError)
    >>> bg.integer_validator("my_var", 0)
    Traceback (most recent call last):
        ...
    ValueError: my_var must be greater than 0

# Test with a non-integer value (expected to raise TypeError)
    >>> bg.integer_validator("my_var", "3")
    Traceback (most recent call last):
        ...
    TypeError: my_var must be an integer

# Test with a floating-point number (expected to raise TypeError)
    >>> bg.integer_validator("my_var", 3.5)
    Traceback (most recent call last):
        ...
    TypeError: my_var must be an integer
